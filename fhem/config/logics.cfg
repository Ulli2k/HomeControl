
#####################
###### General ######
#####################

### HomeScene ###
	define wd_HomeScene watchdog HomeSceneDebounce 00:00:02 SAME { my $s = Value("HomeSceneDebounce");; fhem("set HomeScene scene $s");; }
		attr wd_HomeScene room Conditions
		attr wd_HomeScene autoRestart 1
		attr wd_HomeScene verbose 0
	
	define notify_HomeScene notify HomeScene:(Home|Away|Night|Vacation) {\
		Log 3, "HomeScene set to " . Value("HomeScene") . "...";;\
		GlobalMemory('BackHome','HomeStatus_Delay_BackHome','') if(Value("HomeScene") eq "Home");;\
	}
	define Weblink_HomeScene weblink htmlCode {LightScene_2html("HomeScene")}
		attr Weblink_HomeScene room Conditions
###


### AqBanking ###
	#send eMail if new Bank Transfers are available
	define at_AqBanking at *12:15:00 { checkBankingUpdate("Banking");; }
###

### FritzBox - Verpasste Anrufe Z√§hlen ###
	# Das die "FB_WLANswitch" funktioniert muss z.B. in 99_Utils.pm folgendes eingef√ºgt werden  "use FritzBoxUtils;"
	define notify_FB_MissedCalls notify FritzBoxCallMon:event:.*disconnect {\
			if(ReadingsVal("FritzBoxCallMon", "direction", "outgoing") eq "incoming") {\
				fhem("setreading MemoryDummy FritzBoxMissedCalls ".(ReadingsVal("MemoryDummy", "FritzBoxMissedCalls", "0")+1));;\
			}\
		}
###

### Backup Nuc Home's ###
	# $wday = 0 entspricht Sonntag
	# Shutdown DiskStation passiert √ºber DiskStation Task t√§glich um 3:30 Uhr 
	define at_Backup at *03:00:00 {\
		return if($wday != 1);;\
		Log 3, "Backup of Nuc's home directories ...";;\
		fhem("set DiskStation wake");;\
		fhem("define wd_Backup watchdog PRESENCE_DiskStation:present 00:01:00 SAME { doBackupHome(\"wd_Backup\") }");;\
	}

###

#######################
###### Wohnk√ºche ######
#######################

### Licht - Hintergrund Automatik ###
	define notify_WK_storeLastLightOff notify (WK_BodenLicht.*|WK_BackLight.*) { fhem("setreading MemoryDummy WK_lastLightOffTime " . time()) }

	define notify_WK_Night_Backlight notify (NUC_Satellite:Helligkeit.*|HomeScene|WK_TV) {\
			my $lightOn = ((Value("WK_BodenLicht") eq "on" || Value("WK_BackLight") eq "on") ? 1 : 0);;\
			return if (Value("HomeScene") ne "Home");;\
			if( (ReadingsVal("NUC_Satellite", "Helligkeit", 1) == 0 && !$lightOn) ||\
					(($NAME eq "WK_TV")  && $lightOn) ) {\
				fhem("attr notify_WK_Night_Backlight disable 1");;\
				if(Value("WK_TV") =~ m/off/i) {\
					fhem("set WK_BodenLicht on") if(Value("WK_BodenLicht") ne "on");;\
					fhem("sleep 2;;set WK_BackLight off") if(Value("WK_BackLight") ne "off");;\
				} else {\
					fhem("sleep 1;;set WK_BackLight on") if(Value("WK_BackLight") ne "on");;\
					fhem("sleep 3;;set WK_BodenLicht off") if(Value("WK_BodenLicht") ne "off");;\
				}\
				fhem("deleteattr notify_WK_Night_Backlight");;\
			}\
		}
###

### InternetRadio ###

	define notify_WK_KodiAudio notify WK_KodiAudio:.* {\
				 KodiAudio($EVENT);;\
		}
		attr notify_WK_KodiAudio room System
###

##################
###### B√ºro ######
##################

	define notify_BU_Scanner notify BU_Scanner:.* set BU_DocArchiv $EVENT
	define notify_BU_DocArchiv notify BU_DocArchiv:.* { archiveDoc($NAME,$EVENT) }

####################
###### Keller ######
####################
	define notify_Katzenklappe_Satellite notify Katzenklappe_Satellite:Klappe.*pulse set NUC_Satellite beep --;;set Telegram message üêàüí®
	
	
#########################################
###### Stromverbrauch - Waschk√ºche ######
#########################################

	defmod WZ_Waschmaschine DOIF ([Power:CT4_I] <= 1 and [$SELF:state] ne "running" and [$SELF:state] ne "done") DOELSEIF ([Power:CT4_I] >= 2) (setreading $SELF StartTime 1) DOELSEIF ([Power:CT4_I] < 1 and [$SELF:state] ne "off") ({fhem("set Telegram message W√§sche fertig (" . ReadingsAge('$SELF', 'StartTime', undef) . "s)")})
		attr WZ_Waschmaschine cmdState off|running|done
		attr WZ_Waschmaschine room Waschraum
		attr WZ_Waschmaschine wait 60:0:90
		set WZ_Waschmaschine off
		
#	define notify_WZ_Waschmaschine notify WZ_Waschmaschine:done {\
#		if(OldValue($NAME) ne Value($NAME)) {\
#			fhem("set Telegram message W√§sche fertig (" . ReadingsAge($NAME, 'StartTime', undef) . "s)");;\
#		}\
#	}
	
############################
###### Traffic Status ######
############################

define notify_Verkehrslage notify Traffic_.*:.*delay:.* {\
		my ($cnt,$txt) = getSumState("TYPE=TRAFFIC:FILTER=STATE!=0","delay,return_delay",">0","<value>/<value> <name>");;\
		$txt =~ s/Traffic_//g;;\
		fhem("setreading MemoryDummy Verkehrslage " . $txt);;\
		fhem("setreading MemoryDummy VerkehrslageCnt " . $cnt);;\
	}
	attr notify_Verkehrslage room Conditions
	attr notify_Verkehrslage addStateEvent 1

################################
###### Fenster-/T√ºrstatus ######
################################

define notify_Fenster notify .*:state:.*(open|closed) {\
		my ($cnt,$txt) = getSumState("subType=threeStateSensor|NAME=.*Fenster.*:FILTER=STATE!=closed","","","<room>");;\
		fhem("setreading MemoryDummy offeneFenster " . $txt);;\
		fhem("setreading MemoryDummy offeneFensterCnt " . $cnt);;\
	}
	attr notify_Fenster room Conditions
	attr notify_Fenster addStateEvent 1
	
###############################
###### Rollo - Steuerung ######
###############################           
	#$we ber√ºcksichtigt auch Feiertage wenn HOLIDAY definiert ist und "attr global holiday2we by_ext"

### Parameter ###		

# Tag/Nacht
	define wdt_Rollo_Tageslicht Weekdaytimer wdt_Rollo_Tageslicht de $we,!$we|11:00|sued $we,!$we|13:00|west !$we|{sunrise_abs_dat($date,3800,"7:00","09:00")}|ost !$we|{sunset_abs_dat($date,400,"15:00","20:00")}|dunkel $we|{sunrise_abs_dat($date,3800,"8:00","09:00")}|ost $we|{sunset_abs_dat($date,400,"15:00","21:00")}|dunkel
		#attr wdt_Rollo_Tageslicht commandTemplate setreading $NAME Tageslicht $EVENT
		attr wdt_Rollo_Tageslicht room Conditions
		attr wdt_Rollo_Tageslicht group Rollo			
				
	define notify_Rollo_Parameter notify (HS_Climate:temperature.*|Weather:fc0_cloud.*|wdt_Rollo_Tageslicht|HomeScene) {myRollo_Notify_ParameterUpdate("Rollosteuerung","wdt_Rollo_Tageslicht","HomeScene","HS_Climate","Weather")}
		attr notify_Rollo_Parameter room Conditions
		attr notify_Rollo_Parameter group Rollo
#

### Aktionen ###

	define notify_Rollosteuerung notify (Rollosteuerung) {myRollo_Notify_Automatic($NAME)}	
	attr notify_Rollosteuerung room Conditions
	attr notify_Rollosteuerung group Rollo
			

#Autostosslueftung
	#define Autostosslueftung notify WZ.Terrassentuer:(open|closed) { if (Value("WZ.Terrassentuer") eq "open" && ReadingsVal("TE.Wetterstation", "temperature", "0")<10)  { fhem("set WZ.Rolladen.Rechts 100")};; if (Value("WZ.Terrassentuer") eq "closed" && ReadingsVal("TE.Wetterstation", "brightness", "0")<50)  { fhem("set WZ.Rolladen.Rechts 25")} }
	
