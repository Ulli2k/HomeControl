

/*
 * Timer2 is used for library "myTiming" (functions like millis, micros)
 * Timer1 is used for library "myIRMP" sending and receiving (statemachine) (for pulse distance measurements)
 * Timer0 is used for library "myIRMP" sending (OC0A)
 * INT1 - Analog Interrupt Pin 1 is used for library "myRFM12" receiving OOK Signals
 * 
 * RFM12/69:
 	* SCK, MOSI, MISO 
 	* IRQ -> PINCHG_IRQ or INT0 can be used
 	* SS -> any pin
 	* FFS/DIO2 -> INT1 for OOK data transfer
 * IR
  * OC0A (Timer/Counter0 Compare Match)  for sending IR commands	(PWM) (PD6)
  * ADC2 for receiving IR commands (PC2) + Timer2 for puls distance measurements
 * unused
  * OC0B (Timer/Counter0 Compare Match oder Timer/Counter1 Ext Counter Input) PD5
  * OC2B (Timer/Counter2 Compare Match) PD3 
*/
/*
03I0A0707F80700
03I0A0707F40B00

05F3s20FF0FF0FFFF0
*/
#ifndef _GLOBAL_CONFIG_
#define _GLOBAL_CONFIG_
 
/*********************************************************************/
/*************************** DEVICE CONFIG ***************************/
/********************************************************************/
//interrupts  nur von cfginterupt
//alles über addtoringbuffer <deviceid>
  #define VERSION                    "1"
  #define DEVICE_ID                   5 // 01-99 Decimal kein HEX (byte)
  #define INCLUDE_HELP                1
  #define INCLUDE_DEBUG_OUTPUT        1
  // RadioNetwork 1: 433Mhz 2:868Mhz
  // Satellite 3:868MHz
  #define DEVICE_ID_BROADCAST        0
  #define RFM69_ENCRYPTKEY           "LHRia3xSeoJHKe7)" //exactly the same 16 characters/bytes on all nodes!
  #define SER_BAUD                   57600
  
  #define RF12_433MHZ     1
  #define RF12_868MHZ     2
  #define RF12_915MHZ     3
  #define INIT_RFM_OOK	  1
  #define INIT_RFM_FSK	  2

#if DEVICE_ID==1 //433MHz
  #define HAS_AVR                    1
  #define HAS_LEDs                   0
  #define HAS_BUZZER                 1      // uses Timer0 with Arduino functions like millis() and delay()
  #define HAS_UART                   1  
  #define HAS_RFM12_OOK              1
  #define HAS_RFM12_FSK              0
  #define HAS_SPI                    1
  #define RFM12_FREQ                 RF12_433MHZ
  //#define HAS_IR                     1      // Timer1 and Timer0 is used
  #define HAS_IR_TX                  1
  #define HAS_IR_RX                  1  

#elif DEVICE_ID==2 //868MHz
  #define HAS_AVR                    1
  #define HAS_LEDs                   1
  #define HAS_BUZZER                 0      // uses Timer0 with Arduino functions like millis() and delay()
  #define HAS_UART                   1  
  #define HAS_RFM12_OOK              1
  #define HAS_RFM12_FSK              0
  #define HAS_RFM69                  1
  #define HAS_SPI                    1
  #define RFM12_FREQ                 RF12_868MHZ
  //#define HAS_IR                     0      // Timer1 and Timer0 is used
  #define HAS_IR_TX                  0
  #define HAS_IR_RX                  0
  
#elif DEVICE_ID==3 //IR-Satellite
  #define HAS_AVR                    1
  #define HAS_POWER_OPTIMIZATIONS    1  //for Satellites only to increase battery life
  #define HAS_ADC                    1
  #define HAS_LEDs                   0
  #define HAS_BUZZER                 0      // uses Timer0 with Arduino functions like millis() and delay()
  #define HAS_UART                   1  
  #define HAS_RFM12_OOK              0
  #define HAS_RFM12_FSK              0
  #define HAS_RFM69                  1
  #define HAS_SPI                    1
  #define RFM12_FREQ                 RF12_868MHZ
  //#define HAS_IR                     1      // Timer1 and Timer0 is used
  #define HAS_IR_TX                  1
  #define HAS_IR_RX                  0

#elif DEVICE_ID==5 //RadioGateway 1.1
  #define HAS_AVR                            1
  #define HAS_POWER_OPTIMIZATIONS            0
  #define HAS_ADC                            1
  #define HAS_LEDs                           0
  #define HAS_BUZZER                         1      // uses Timer0 with Arduino functions like millis() and delay()
  #define HAS_UART                           1  
  #define HAS_RFM12_OOK                      0
  #define HAS_RFM12_FSK                      0
  #define HAS_SPI                            1
  #define HAS_RFM69                          1
  #define HAS_RFM69_POWER_ADJUSTABLE         0 //adjustable TX power (min default)
  #define HAS_RFM69_CMD_TUNNELING            0 //0:off 1:Host 2:Satellites || Tunneling Commands (HOST<->SATELLITE)
  #define HAS_RFM69_LISTENMODE               0
//  #define RFM12_FREQ                       RF12_433MHZ
  //#define HAS_IR                           1      // Timer1 and Timer0 is used
  #define HAS_IR_TX                          1 //05I0A0707F80701
  #define HAS_IR_RX                          1  
  #define HAS_BME280                         0
#endif
  //#define SOFTWARE_UART     0  // Leitet im Masterbetrieb alle unbekannte Kommandos auf die SW Uart um und leite<t SW-UART strings auf die Remote Uart um
                                 // Leitet im Slavebetrieb alle prints auf die SW Uart um



/*********************************************************************/
/***************************** PIN CONFIG ****************************/
/*********************************************************************/

  #if HAS_LEDs  //Port 4:  LED2: PC3 LED1: PD7 /// Device 2: LED: PD4 -> 4
    #define LED1_PIN                   4    
    #define LED_ACTIVITY               1  //LED 1 or 2
    //#define LED2_PIN                 7    //not implemented yet
    
    #define DELAY_ACTIVITY_LED        50       //milliseconds
  #endif
  
  #if HAS_BUZZER
    #if DEVICE_ID==5
      #define BUZZER_PIN	             5
      #define BUZZER_FREQUENCE               2.731 // [kHz] <-- define is optional!
      //#define BUZZER_CYCLE_PERIOD            ((1/BUZZER_FREQUENCE)*1000000000) //366 Periodendauer in [µs]
      //#define BUZZER_ONOFF_FACTOR            2
      #define BUZZER_ON_TIME                 91//((BUZZER_CYCLE_PERIOD/2)/BUZZER_ONOFF_FACTOR) // [µs]
      #define BUZZER_OFF_TIME                275//(BUZZER_CYCLE_PERIOD-BUZZER_ON_TIME) // [µs]
    #else
      #define BUZZER_PIN	             14   // PIN: PD6  Port 3 on Slave --> analog 6
    #endif                                        // PIN: ADC0  --> analog 0 digital 14
  #endif

/*
#if HAS_BATTERY
    #define BATTERY_PIN              A6
  #endif
*/
  #if HAS_BME280
    #define I2C_ADDRESS              0x76
  #endif
  
  #if HAS_POWER_OPTIMIZATIONS
    #define LOWPOWER_MAX_IDLETIME      50 //ms (Caution: RFM69 debounce times. millis will stop during sleep)
    #define LOWPOWER_INFO_POLL_CYCLE_TIME   225 //120 for 16min//max 255 multiplier of 8 Seconds 
  #endif
  
#endif

